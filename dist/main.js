"use strict";$.fn.keyboard=function(e){var a={29:0,"02":1,"03":2,"04":3,"05":4,"06":5,"07":6,"08":7,"09":8,"0a":9,"0b":10,"0c":11,"0d":12,10:13,11:14,12:15,13:16,14:17,15:18,16:19,17:20,18:21,19:22,"1a":23,"1b":24,"2b":25,"1e":26,"1f":27,20:28,21:29,22:30,23:31,24:32,25:33,26:34,27:35,28:36,"2c":37,"2d":38,"2e":39,"2f":40,30:41,31:42,32:43,33:44,34:45,35:46},t={shift:!1,caps:!1,altgrp:!1,shift_altgrp:""},o=$(this),r=void 0,l=!1,c=void 0,n={keyboardFile:"",arrayPosition:""},i=void 0,d=void 0,s=void 0,p="",y=!1,k="LTR",b=!1,u="text",g="text",h=void 0;e={language:void 0===e.language?"us":e.language,keyColor:void 0===e.keyColor?"#E0E0E0":e.keyColor,keyTextColor:void 0===e.keyTextColor?"#555555":e.keyTextColor,capsLightColor:void 0===e.capsLightColor?"#3498DB":e.capsLightColor,enterKey:void 0===e.enterKey?"":e.enterKey,tabKey:void 0===e.tabKey?"":e.tabKey,ctrlKey:void 0===e.ctrlKey?"":e.ctrlKey,altKey:void 0===e.altKey?"":e.altKey,spareKey:void 0===e.spareKey?"":e.spareKey,languageKey:void 0===e.languageKey?"":e.languageKey,keyboardPosition:void 0===e.keyboardPosition?"bottom":e.keyboardPosition,inputType:function(e){var a=new Array,t="";void 0!==e&&""!=e?(a=e.trim().split(","),$.each(a,function(e,a){"contenteditable"==a.trim().toString()?t+='[contenteditable="true"], ':"textarea"==a.trim().toString()?t+="textarea, ":t+='input[type="'+a.trim().toString()+'"], '}),t=t.slice(0,-2)):t='input[type="text"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="url"], textarea, [contenteditable="true"]';return t}(e.inputType),cancelColor:void 0===e.cancelColor?"#E74C3C":e.cancelColor,cancelTextColor:void 0===e.cancelTextColor?"#FFFFFF":e.cancelTextColor,acceptColor:void 0===e.acceptColor?"#2ECC71":e.acceptColor,acceptTextColor:void 0===e.acceptTextColor?"#FFFFFF":e.acceptTextColor,blackoutColor:void 0===e.blackoutColor?"25, 25, 25, 0.9":e.blackoutColor,allowEscapeCancel:void 0===e.allowEscapeCancel||e.allowEscapeCancel,allowEnterAccept:void 0===e.allowEnterAccept||e.allowEnterAccept,directEnter:void 0!==e.directEnter&&e.directEnter,keyCharacterRegex:void 0===e.keyCharacterRegex?{number:/[0-9]|[eE]|\.|\+|-/,tel:/[0-9]|\.|\+|-|#|\(|\)/}:e.keyCharacterRegex,inputFieldRegex:void 0===e.inputFieldRegex?{number:/^(-)?(((\d+)|(\d+\.(\d+)?)|(\.(\d+)?))([eE]([-+])?(\d+)?)?)?$/}:e.inputFieldRegex};var f={disabled:"",readonly:"",maxlength:"",min:"",max:"",placeholder:""};function v(e){""!=n.keyboardFile&&n.arrayPosition==c?w(e,n.keyboardFile):$.get("languages/"+e+".klc",function(a){n.keyboardFile=a,n.arrayPosition=c,w(e,a)})}function w(t,o){var r,l,c,n,p=void 0,y=void 0,u=void 0,g=new Array,h=void 0;i="",d="",s="",r=(o=o.replace(/\u0000/g,"")).match(/\d(\w)?\s+\w+\s+\d\s+(-1|\w+@?|%%)\s+(-1|\w+@?|%%)\s+(-1|\w+@?|%%)(\s+(-1|\w+@?|%%))?(\s+(-1|\w+@?|%%))?(\s+(-1|\w+@?|%%))?\s+\/\//g),(l=o.indexOf("SHIFTSTATE"))>0&&((p=o.slice(l,o.indexOf("LAYOUT")).trim().split(/\n/g)).splice(0,2),$.each(p,function(e,a){-1==a.indexOf(":")?i+='"default": ':-1!=a.indexOf("Shft  Ctrl Alt")?i+='"shift_altgrp": ':-1!=a.indexOf("Shft  Ctrl")?i+='"ctrl_shift": ':-1!=a.indexOf("Ctrl Alt")?i+='"altgrp": ':-1!=a.indexOf("Ctrl")?i+='"ctrl": ':-1!=a.indexOf("Shft")&&(i+='"shift": '),i+=a.match(/\w{6}\s[0-9]/).toString().slice(-1)+", "}),i=JSON.parse("{"+i.toString().slice(0,-2)+"}")),(c=o.indexOf("DEADKEY"))>0&&((y=o.slice(c,o.indexOf("KEYNAME")).trim().split("DEADKEY")).splice(0,1),$.each(y,function(e,a){(g=a.split(/\n/g)).splice(0,2),h="",$.each(g,function(e,a){h+='"'+a.trim().slice(0,4)+'": "'+a.trim().slice(5,9)+'", '}),h="{"+h.slice(0,-2)+"}",d+='"'+a.trim().slice(0,4)+'": '+h+", "}),d=JSON.parse("{"+d.slice(0,-2)+"}")),(n=o.indexOf("LIGATURE"))>0&&((u=o.slice(n,o.indexOf("KEYNAME")).trim().split(/\n/g)).splice(0,5),$.each(u,function(e,a){a.indexOf("//")>0&&(u[e]=a.trim().split("//")[0].trim().replace(/\t/g," ").replace("  "," ").replace("  "," ").split(" "),u[e].splice(1,1),s+='"'+u[e][0]+'": ',u[e].splice(0,1),$.each(u[e],function(a,t){u[e][a]='"'+t+'"'}),s+="["+u[e]+"], ")}),s=JSON.parse("{"+s.slice(0,-2)+"}")),k="arabic"==t?"RTL":"LTR",function(t){var o=t.toString().split(","),r=new Array,l=new Array(47);$.each(o,function(e,t){r[e]=t.toString().replace(/(\t+|\s+)/g," "),r[e]=r[e].split(" "),void 0!==a[r[e][0]]&&(l[a[r[e][0]]]=r[e])}),$(".keyboard-wrapper").length?(T(),$(".keyboard-row").remove(),!0):($("body").prepend('<div class="keyboard-wrapper"></div>'),e.directEnter||$("body").prepend('<div class="keyboard-blackout-background"></div>'),!1);m(l.slice(0,13)),m(l.slice(13,26)),m(l.slice(26,37)),m(l.slice(37,47)),C("default"),$(".keyboard-action-wrapper").length||e.directEnter||$(".keyboard-wrapper").prepend('<div class="keyboard-action-wrapper"><button class="keyboard-action-button keyboard-cancel-button">Cancel</button><input type="text" class="keyboard-input-field"><button class="keyboard-action-button keyboard-accept-button">Accept</button></div>'),$(".keyboard-row:eq(0)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="backspace">Backspace</button>'),$(".keyboard-row:eq(1)").prepend('<button class="keyboard-key keyboard-key-lg" data-keyval="tab">Tab</button>'),$(".keyboard-row:eq(2)").prepend('<button class="keyboard-key keyboard-key-lg caps-lock-key" data-keyval="caps lock">Caps Lock</button>'),$(".keyboard-row:eq(2)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="enter">Enter</button>'),$(".keyboard-row:eq(3)").prepend('<button class="keyboard-key keyboard-key-lg" data-keyval="shift">Shift</button>'),$(".keyboard-row:eq(3)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="shift">Shift</button>'),$(".keyboard-wrapper").append('<div class="keyboard-row"></div>'),$(".keyboard-row:eq(4)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="ctrl">Ctrl</button>'),$(".keyboard-row:eq(4)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="language">Language</button>'),$(".keyboard-row:eq(4)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="alt">Alt</button>'),$(".keyboard-row:eq(4)").append('<button class="keyboard-key keyboard-key-xl" data-keyval="space">&nbsp;</button>'),$(".keyboard-row:eq(4)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="alt grp">Alt Grp</button>'),$(".keyboard-row:eq(4)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="spare">&nbsp;</button>'),$(".keyboard-row:eq(4)").append('<button class="keyboard-key keyboard-key-lg" data-keyval="ctrl">Ctrl</button>'),c=$(".keyboard-row").width(),n=2*$(".keyboard-key").css("margin-right").match(/[0-9]/),i=void 0,d=void 0,s=void 0,p=(c-15*n)/15,y=void 0,k=c/3,$(".keyboard-row").each(function(){i=$(this).children(".keyboard-key-sm").length,d=$(this).children(".keyboard-key-lg").length,s=$(this).children(".keyboard-key-xl").length,y=(c-(i+d+s)*n-i*p-s*k)/d,$(this).children(".keyboard-key-sm").width(p),$(this).children(".keyboard-key-lg").width(y),$(this).children(".keyboard-key-xl").width(k)}),function(){var a=$(window).width(),t=$(window).height(),o=$(".keyboard-wrapper").height(),r=$(".keyboard-wrapper").width();switch($(".keyboard-key").css("background-color",e.keyColor),$(".keyboard-key").css("color",e.keyTextColor),e.directEnter||($(".keyboard-cancel-button").css("background-color",e.cancelColor),$(".keyboard-cancel-button").css("color",e.cancelTextColor),$(".keyboard-accept-button").css("background-color",e.acceptColor),$(".keyboard-accept-button").css("color",e.acceptTextColor),$(".keyboard-blackout-background").css("background-color","rgba("+e.blackoutColor+")")),e.keyboardPosition){case"top":$(".keyboard-wrapper").css("top","20px");break;case"middle":$(".keyboard-wrapper").css("top",((t-o)/2).toString()+"px");break;default:$(".keyboard-wrapper").css("bottom","20px")}$(".keyboard-wrapper").css("left",((a-r)/2).toString()+"px")}(),b||(e.directEnter||$(".keyboard-blackout-background").hide(),$(".keyboard-wrapper").hide());var c,n,i,d,s,p,y,k}(r)}function m(e){var a=void 0;$(".keyboard-wrapper").append('<div class="keyboard-row"></div>'),$.each(e,function(e,t){var o;a=void 0!==t?{default:x(t[i.default-1],t[1]),shift:x(t[i.shift-1],t[1]),altgrp:x(t[i.altgrp-1],t[1]),shift_altgrp:x(t[i.shift_altgrp-1],t[1])}:{default:"-1",shift:"-1",altgrp:"-1",shift_altgrp:"-1"},o=a,$(".keyboard-row:last").append('<button class="keyboard-key keyboard-key-sm"></button>'),$(".keyboard-key:last").data("keyDataObject",o)})}function x(e,a){var t=e;return"%%"==e?t=s[a]:void 0===e&&(t="-1"),t}function C(e){var a=void 0,o=void 0,r="";!t.caps||t.shift||t.altgrp?t.caps||t.shift||t.altgrp||(e="default"):(e="default",$(".caps-lock-key").addClass("caps-lock-key-active")),t.caps||$(".caps-lock-key").removeClass("caps-lock-key-active"),""!=t.shift_altgrp&&"shift_altgrp"!=e&&(t.shift_altgrp=""),$(".keyboard-key").each(function(){r="";try{a=$(this),4==(o=a.data("keyDataObject"))[e].length?(a.html("&#x"+o[e]+";"),a.data("keyval",a.html())):5==o[e].length&&o[e].match("@")?(a.html("&#x"+o[e].replace("@","")+";"),a.data("keyval",a.html())):o[e].constructor===Array?($.each(o[e],function(e,a){r+="&#x"+a+";"}),a.html(r),a.data("keyval",a.html())):"-1"==o[e]||"%%"==o[e]||0==o[e].length?(a.html("&nbsp;"),a.data("keyval","")):(a.html(o[e]),a.data("keyval",a.html())),t.shift||!t.caps||t.altgrp||(a.html(1==a.html().length?a.html().toUpperCase():a.html()),a.data("keyval",1==a.html().length?a.html():a.data("keyval")))}catch(e){}})}function K(){h.val(""),T(),b=!1,v(e.language[c])}function E(){r.is("input")?r.val(h.val()):r.html(h.val()),h.val(""),T(),b=!1,v(e.language[c])}function T(){for(var e in t)t.hasOwnProperty(e)&&(t[e]=!1)}e.language=e.language.split(","),$.each(e.language,function(a,t){e.language[a]=t.trim()}),c=0,v(e.language[c]),o.on("click touch",e.inputType,function(){if("keyboard-input-field"!=$(this).prop("class")){var a=$(this);$.each(f,function(e){f[e]=void 0===a.prop(e)?"":a.prop(e)}),f.disabled||f.readonly||(r=$(this),h=r,e.directEnter||(h=$(".keyboard-input-field"),r.is("input")?(u=r.prop("type"),g="password"==u?"password":"text",h.prop("placeholder",f.placeholder),h.val(r.val()),h.prop("type",g)):(u="text",h.val(r.html()),h.prop("type","text")),$(".keyboard-blackout-background").show()),$(".keyboard-wrapper").show(),b=!0,h.focus())}}),$(document).on("click touch",".keyboard-key",function(){var a=$(this).data("keyval");!function(a){var o=("0000"+a.charCodeAt(0).toString(16)).slice(-4),r=h[0].selectionStart;if((a=a.replace("&lt;","<").replace("&gt;",">").replace(/\bspace/," ")).length>2)switch(p="",a){case"shift":t.shift=!t.shift,t.caps=!1,t.altgrp=!1,"altgrp"==t.shift_altgrp?(C("shift_altgrp"),t.shift_altgrp=""):"shift"==t.shift_altgrp?(C("shift"),t.shift_altgrp=""):(C("shift"),t.shift_altgrp="shift");break;case"caps lock":t.shift=!1,t.caps=!t.caps,t.altgrp=!1,C("caps");break;case"alt grp":t.shift=!1,t.caps=!1,t.altgrp=!t.altgrp,"shift"==t.shift_altgrp?(C("shift_altgrp"),t.shift_altgrp=""):"altgrp"==t.shift_altgrp?(C("altgrp"),t.shift_altgrp=""):(C("altgrp"),t.shift_altgrp="altgrp");break;case"backspace":h.val(h.val().slice(0,r-1)+h.val().slice(r)),r-=1,h.focus(),h[0].selectionStart=r,h[0].selectionEnd=r;break;case"space":break;case"enter":e.enterKey&&"function"==typeof e.enterKey&&e.enterKey();break;case"tab":e.tabKey&&"function"==typeof e.tabKey&&e.tabKey();break;case"ctrl":e.ctrlKey&&"function"==typeof e.ctrlKey&&e.ctrlKey();break;case"alt":e.altKey&&"function"==typeof e.altKey&&e.altKey();break;case"language":c+1<=e.language.length-1?c++:c=0,T(),v(e.language[c]),e.languageKey&&"function"==typeof e.languageKey&&e.languageKey();break;case"spare":e.spareKey&&e.spareKey}else{if(t.shift=!1,t.altgrp=!1,C("default"),(p=d[o])||y){if(a="",void 0===p&&y){var l=String.fromCharCode("0x"+y[o]);l&&void 0!==y[o]&&(a=l)}y=p}h.attr("dir",k);var n=h.val(),i=void 0;h.val(h.val().slice(0,r)+a+h.val().slice(r)),i=h.val(),("-1"!=f.maxlength&&""!=f.maxlength&&i.length>f.maxlength||"number"==u&&""!=f.max&&"-1"!=f.max&&1*i>1*f.max||"number"==u&&""!=f.min&&"-1"!=f.min&&1*i<1*f.min||a.search(e.keyCharacterRegex[u])<0||i.search(e.inputFieldRegex[u])<0)&&(h.val(n),r--),r+=a.length,h.focus();try{h[0].selectionStart=r,h[0].selectionEnd=r}catch(e){console.log(e),console.log(n),console.log(h.val()),n.length&&n!==h.val()&&h.val(n)}}}(a)}),$(document).on("click touch",".keyboard-cancel-button",function(){K()}),$(document).on("click touch",".keyboard-accept-button",function(){E()}),$(document).on("click touch","*",function(a){if(a.stopPropagation(),b&&e.directEnter){var t=$(this);if(e.inputType.search(t.attr("type"))<1&&e.inputType.search(t.prop("tagName").toLowerCase())<1&&"true"!=t.prop("contenteditable")){for(;t.parent().length&&!t.hasClass("keyboard-wrapper");)t=t.parent();t.hasClass("keyboard-wrapper")||(T(),b=!1,v(e.language[c]))}}}),$(document).on("keydown",function(a){!function(a){if($(".keyboard-wrapper").is(":visible"))switch(a.which){case 13:e.allowEnterAccept&&(E(),a.preventDefault());break;case 27:e.allowEscapeCancel&&(K(),a.preventDefault())}}(a)}),$(window).resize(function(){l||(l=!0,setTimeout(function(){v(e.language[c]),l=!1},500))})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
